
&После("ДобавитьКомандыПечати")
Процедура АНТ_ДобавитьКомандыПечати(КомандыПечати)
	//Коммерческое
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Коммерческое";
	КомандаПечати.Представление = НСтр("ru='Коммерческое предложение';uk='Комерційна пропозиція'");
	КомандаПечати.СписокФорм = "ФормаДокумента,ФормаСписка,ФормаСпискаДокументов";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	//КомандаПечати.Обработчик = "УправлениеНебольшойФирмойКлиент.ПредложитьЗаполнитьРеквизитыОрганизации";
	КомандаПечати.Порядок = 1;

КонецПроцедуры

&После("Печать")
Процедура АНТ_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Коммерческое") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Коммерческое", "Коммерческое предложение", ПечатьКоммерческое(МассивОбъектов, ОбъектыПечати, "Коммерческое"));
		
	КонецЕсли;
КонецПроцедуры


Функция ПечатьКоммерческое(МассивОбъектов, ОбъектыПечати, ИмяМакета) Экспорт
	
	Перем Ошибки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаказПокупателя.Ссылка КАК Ссылка,
	|	ЗаказПокупателя.ВерсияДанных КАК ВерсияДанных,
	|	ЗаказПокупателя.ПометкаУдаления КАК ПометкаУдаления,
	|	ЗаказПокупателя.Номер КАК Номер,
	|	ЗаказПокупателя.Дата КАК Дата,
	|	ЗаказПокупателя.Проведен КАК Проведен,
	|	ЗаказПокупателя.ВидЗаказа КАК ВидЗаказа,
	|	ЗаказПокупателя.Организация КАК Организация,
	|	ЗаказПокупателя.ДатаОтгрузки КАК ДатаОтгрузки,
	|	ЗаказПокупателя.Заметки КАК Заметки,
	|	ЗаказПокупателя.Контрагент КАК Контрагент,
	|	ЗаказПокупателя.СостояниеЗаказа КАК СостояниеЗаказа,
	|	ЗаказПокупателя.Договор КАК Договор,
	|	ЗаказПокупателя.ВидОперации КАК ВидОперации,
	|	ЗаказПокупателя.Проект КАК Проект,
	|	ЗаказПокупателя.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ЗаказПокупателя.БанковскийСчет КАК БанковскийСчет,
	|	ЗаказПокупателя.Касса КАК Касса,
	|	ЗаказПокупателя.ЗапланироватьОплату КАК ЗапланироватьОплату,
	|	ЗаказПокупателя.СтруктурнаяЕдиницаРезерв КАК СтруктурнаяЕдиницаРезерв,
	|	ЗаказПокупателя.СтруктурнаяЕдиницаПродажи КАК СтруктурнаяЕдиницаПродажи,
	|	ЗаказПокупателя.УсловияСчетаЗаказа КАК УсловияСчетаЗаказа,
	|	ЗаказПокупателя.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	ЗаказПокупателя.Получил КАК Получил,
	|	ЗаказПокупателя.Отпустил КАК Отпустил,
	|	ЗаказПокупателя.ОтпустилДолжность КАК ОтпустилДолжность,
	|	ЗаказПокупателя.Ответственный КАК Ответственный,
	|	ЗаказПокупателя.Автор КАК Автор,
	|	ЗаказПокупателя.ВариантЗавершения КАК ВариантЗавершения,
	|	ЗаказПокупателя.ПричинаОтмены КАК ПричинаОтмены,
	|	ЗаказПокупателя.Комментарий КАК Комментарий,
	|	ЗаказПокупателя.ВалютаДокумента КАК ВалютаДокумента,
	|	ЗаказПокупателя.А_Тип КАК А_Тип,
	|	ЗаказПокупателя.А_ПлощадьДома КАК А_ПлощадьДома,
	|	ЗаказПокупателя.А_Мощность КАК А_Мощность,
	|	ЗаказПокупателя.А_Оборудование_Солнечные КАК А_Оборудование_Солнечные,
	|	ЗаказПокупателя.Запасы.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Резерв КАК Резерв,
	|		Количество КАК Количество,
	|		Характеристика КАК Характеристика,
	|		ДатаОтгрузки КАК ДатаОтгрузки,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Всего КАК Всего,
	|		Содержание КАК Содержание,
	|		Номенклатура КАК Номенклатура,
	|		Спецификация КАК Спецификация,
	|		Партия КАК Партия,
	|		ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
	|		ПроцентСкидкиНаценки КАК ПроцентСкидкиНаценки,
	|		Цена КАК Цена,
	|		СуммаНДС КАК СуммаНДС,
	|		СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
	|		Сумма КАК Сумма,
	|		СтавкаНДС КАК СтавкаНДС,
	|		А_ГруппаИД КАК А_ГруппаИД
	|	) КАК Запасы,
	|	ЗаказПокупателя.МатериалыЗаказчика.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ДатаПоступления КАК ДатаПоступления,
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|	) КАК МатериалыЗаказчика,
	|	ЗаказПокупателя.Работы.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки
	|	) КАК Работы,
	|	ЗаказПокупателя.СкидкиНаценки.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки
	|	) КАК СкидкиНаценки,
	|	ЗаказПокупателя.ПлатежныйКалендарь.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ДатаОплаты КАК ДатаОплаты,
	|		ПроцентОплаты КАК ПроцентОплаты,
	|		СуммаОплаты КАК СуммаОплаты,
	|		СуммаНДСОплаты КАК СуммаНДСОплаты
	|	) КАК ПлатежныйКалендарь,
	|	ЗаказПокупателя.А_РазделыГруппы.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		РазделГруппа КАК РазделГруппа,
	|		РазделГруппаИД КАК РазделГруппаИД
	|	) КАК РазделыГруппы,
	|	ЗаказПокупателя.Представление КАК Представление,
	|	ЗаказПокупателя.МоментВремени КАК МоментВремени
	|ИЗ
	|	Документ.ЗаказПокупателя КАК ЗаказПокупателя
	|ГДЕ
	|	ЗаказПокупателя.Ссылка В(&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Шапка = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		//ВыборкаСтрокЗапасы = Шапка.Запасы.Выбрать();
		 
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_" + ИмяМакета + "_" + ИмяМакета;
		
		//ЭтоКомПоОтоплению = Шапка.Ссылка.ВидЗаказа = Справочники.ВидыЗаказовПокупателей.НайтиПоНаименованию("Комерційне по опаленню", Истина);
		ЭтоКомПоСолнечным = ЗначениеЗаполнено(Шапка.А_Оборудование_Солнечные);// Шапка.Ссылка.ВидЗаказа = Справочники.ВидыЗаказовПокупателей.НайтиПоНаименованию("Комерційне по сонячним", Истина);
		//ЭтоКомПоТепловым = Шапка.Ссылка.ВидЗаказа = Справочники.ВидыЗаказовПокупателей.НайтиПоНаименованию("Комерційне по тепловим", Истина);
		//Если ЭтоКомПоОтоплению или ЭтоКомПоТепловым Тогда
		//	ИмяМакета = "Коммерческое";
		//Иначе
		//	ИмяМакета = "Коммерческое_Солнечные";
		//КонецЕсли;
		Если ЭтоКомПоСолнечным Тогда
			ИмяМакета = "Коммерческое_Солнечные";
		Иначе 
			ИмяМакета = "Коммерческое";
		КонецЕсли;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаказПокупателя.АНТ_ПФ_MXL_" + ИмяМакета);
		
		КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();	
		Макет.КодЯзыкаМакета = КодЯзыкаПечать;
		ЕстьСкидки=Ложь;
		ОбластьМакета =Макет.ПолучитьОбласть("Шапка");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если Шапка.Ссылка.Запасы.Итог("ПроцентСкидкиНаценки") <> 0 Тогда
			ЕстьСкидки = Истина;
		КонецЕсли;
		
		Если ЕстьСкидки = Истина Тогда
		ОбластьМакета =Макет.ПолучитьОбласть("ШапкаТаблицыСоСкидкой");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		Иначе
		ОбластьМакета =Макет.ПолучитьОбласть("ШапкаТаблицыБезСкидки");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ВыборкаСтрокГруппы = Шапка.РазделыГруппы.Выбрать();
		
		ВыборкаСтрокЗапасы = Шапка.Запасы.Выгрузить();
		ОбщаяСкидка=0;
		
		Если ВыборкаСтрокГруппы.КОличество() > 0 Тогда
			Пока ВыборкаСтрокГруппы.Следующий() Цикл
			СуммаСкидкиРаздела=0;
			СуммаИтогРаздела = 0;
			
			ИмяРаздела  = ВыборкаСтрокГруппы.РазделГруппа;
			ИДРаздела = ВыборкаСтрокГруппы.РазделГруппаИД;
			СтруктураДляПоиска = Новый Структура("А_ГруппаИД", Строка(ИДРаздела)); 
			
			МассивНайденныхСтрок = ВыборкаСтрокЗапасы.НайтиСтроки(СтруктураДляПоиска); 
			Если МассивНайденныхСтрок.Количество() >  0 Тогда
				ОбластьМакета =Макет.ПолучитьОбласть("ИмяРаздела");
				ОбластьМакета.Параметры.ИмяРаздела = ИмяРаздела;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				//выводим товары раздела
				
				Для каждого Строка Из МассивНайденныхСтрок Цикл 
					Если ЕстьСкидки = Ложь Тогда
						ОбластьМакета =Макет.ПолучитьОбласть("Строка");
					Иначе
						ОбластьМакета =Макет.ПолучитьОбласть("СтрокаСоСкидкой");
					КонецЕсли;
					
					ОбластьМакета.Параметры.Заполнить(Строка);
					Если ЕстьСкидки = Истина Тогда
						ОбластьМакета.Параметры.Скидка = Окр(Строка.Количество*Строка.Цена*(Строка.ПроцентСкидкиНаценки/100),2,РежимОкругления.Окр15как10);
						СуммаСкидкиРаздела = СуммаСкидкиРаздела + Окр(Строка.Количество*Строка.Цена*(Строка.ПроцентСкидкиНаценки/100),2,РежимОкругления.Окр15как10);
						//ОбщаяСкидка =ОбщаяСкидка +  СуммаСкидкиРаздела;
					КонецЕсли;
					СуммаИтогРаздела = СуммаИтогРаздела + Строка.Сумма;
					ТабличныйДокумент.Вывести(ОбластьМакета); 
					
				КонецЦикла;
				//выводим итоги раздела
				
				ОбщаяСкидка =ОбщаяСкидка +  СуммаСкидкиРаздела;
				Если ЕстьСкидки = Ложь Тогда
					ОбластьМакета =Макет.ПолучитьОбласть("ИтогРаздела");
					ОбластьМакета.Параметры.СуммаРаздела = СуммаИтогРаздела;
				Иначе
					ОбластьМакета =Макет.ПолучитьОбласть("ИтогРазделаСоСкидкой");
					ОбластьМакета.Параметры.СуммаСкидки = СуммаСкидкиРаздела;
					ОбластьМакета.Параметры.СуммаРаздела = СуммаИтогРаздела;
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли; 
			
		КонецЦикла; 
	Иначе
		 //выводим товары раздела
				
		 Для каждого Строка Из ВыборкаСтрокЗапасы Цикл
			 СуммаСкидкиРаздела=0;

					Если ЕстьСкидки = Ложь Тогда
						ОбластьМакета =Макет.ПолучитьОбласть("Строка");
					Иначе
						ОбластьМакета =Макет.ПолучитьОбласть("СтрокаСоСкидкой");
					КонецЕсли;
					
					ОбластьМакета.Параметры.Заполнить(Строка);
					Если ЕстьСкидки = Истина Тогда
						ОбластьМакета.Параметры.Скидка = Окр(Строка.Количество*Строка.Цена*(Строка.ПроцентСкидкиНаценки/100),2,РежимОкругления.Окр15как10);
						СуммаСкидкиРаздела = СуммаСкидкиРаздела + Окр(Строка.Количество*Строка.Цена*(Строка.ПроцентСкидкиНаценки/100),2,РежимОкругления.Окр15как10);
						ОбщаяСкидка =ОбщаяСкидка +  СуммаСкидкиРаздела;
					КонецЕсли;
					//СуммаИтогРаздела = СуммаИтогРаздела + Строка.Сумма;
					ТабличныйДокумент.Вывести(ОбластьМакета); 
					
				КонецЦикла;
		КонецЕсли; 
		
		
		Если ЕстьСкидки = Ложь Тогда
			ОбластьМакета =Макет.ПолучитьОбласть("Итог");
		Иначе
			ОбластьМакета =Макет.ПолучитьОбласть("ИтогСоСкидкой");
			ОбластьМакета.Параметры.ОбщаяСкидка = ОбщаяСкидка;
		КонецЕсли;
		ОбластьМакета.Параметры.Итого = Шапка.Ссылка.Запасы.Итог("Сумма");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
	Возврат ТабличныйДокумент;
	КонецЦикла;	
		
КонецФункции // ПечатнаяФорма()
