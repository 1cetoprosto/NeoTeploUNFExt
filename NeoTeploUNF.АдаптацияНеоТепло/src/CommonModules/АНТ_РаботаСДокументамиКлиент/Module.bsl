//{[+](фрагмент добавлен), Lena@ICSOFT 18.12.2017 22:24:30
// Выполняем пересчет цены табличной части документа после изменений в форме 
// "Цены и валюта".
//
Процедура ПерезаполнитьЦеныТабличнойЧастиПоВидуЦен(ФормаДокумента, ИмяТабличнойЧасти, ПересчитатьСкидки = Ложь, ПересчитыватьЦеныСЗаказом = Истина) Экспорт
	
	СтруктураДанных = Новый Структура;
	ТабличнаяЧастьДокумента = Новый Массив;

	СтруктураДанных.Вставить("Дата",				ФормаДокумента.Объект.Дата);
	СтруктураДанных.Вставить("Организация",			ФормаДокумента.Компания);
	СтруктураДанных.Вставить("ВидЦен",				ФормаДокумента.Объект.ВидЦен);
	СтруктураДанных.Вставить("ВалютаДокумента",		ФормаДокумента.Объект.ВалютаДокумента);
	СтруктураДанных.Вставить("СуммаВключаетНДС",	ФормаДокумента.Объект.СуммаВключаетНДС);
	
	Если ПересчитатьСкидки Тогда
		СтруктураДанных.Вставить("ВидСкидкиНаценки", ФормаДокумента.Объект.ВидСкидкиНаценки);
		СтруктураДанных.Вставить("ПроцентСкидкиНаценки", 0);
		Если УправлениеНебольшойФирмойСервер.ЕстьРеквизитДокументаПоСсылке("ПроцентСкидкиПоДисконтнойКарте", ФормаДокумента.Объект.Ссылка) Тогда
			СтруктураДанных.Вставить("ПроцентСкидкиПоДисконтнойКарте", ФормаДокумента.Объект.ПроцентСкидкиПоДисконтнойКарте);		
		КонецЕсли;
	КонецЕсли;
	СписокЧастейТовары =Новый Массив; 
	СписокЧастейТовары.Добавить("Товары1");
	СписокЧастейТовары.Добавить("Товары2");
	СписокЧастейТовары.Добавить("Товары3");
	СписокЧастейТовары.Добавить("Товары4");
	СписокЧастейТовары.Добавить("Товары5");
	СписокЧастейТовары.Добавить("Товары6");
	СписокЧастейТовары.Добавить("Товары7");
	СписокЧастейТовары.Добавить("Товары8");
	СписокЧастейТовары.Добавить("Товары9");
	СписокЧастейТовары.Добавить("Товары10");
	

	Для каждого СтрокаТЧ Из ФормаДокумента.Объект[ИмяТабличнойЧасти] Цикл
		
		СтрокаТЧ.Цена = 0;
		//{[+](фрагмент добавлен), Lena@ICSOFT 18.12.2017 22:04:44
		СтрокаТЧ.ЦенаПоТипу = 0;
		СтрокаТЧ.ВидЦены = СтруктураДанных.ВидЦен;
		//СтрокаТЧ.Коэффициент = 1;
		//}Lena@ICSOFT 18.12.2017 22:04:44		
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			Продолжить;	
		КонецЕсли; 
		
		СтрокаТабличнойЧасти = Новый Структура();
		СтрокаТабличнойЧасти.Вставить("Номенклатура",		СтрокаТЧ.Номенклатура);
		СтрокаТабличнойЧасти.Вставить("Характеристика",		СтрокаТЧ.Характеристика);
		СтрокаТабличнойЧасти.Вставить("ЕдиницаИзмерения",	СтрокаТЧ.ЕдиницаИзмерения);
		СтрокаТабличнойЧасти.Вставить("СтавкаНДС",			СтрокаТЧ.СтавкаНДС);
		СтрокаТабличнойЧасти.Вставить("Цена",				0);
		
		ТабличнаяЧастьДокумента.Добавить(СтрокаТабличнойЧасти);
		
	КонецЦикла;
		
	УправлениеНебольшойФирмойСервер.ПолучитьЦеныТабличнойЧастиПоВидуЦен(СтруктураДанных, ТабличнаяЧастьДокумента);
		
	Для каждого СтрокаТЧ Из ТабличнаяЧастьДокумента Цикл

		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура",		СтрокаТЧ.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика",		СтрокаТЧ.Характеристика);
		СтруктураПоиска.Вставить("ЕдиницаИзмерения",	СтрокаТЧ.ЕдиницаИзмерения);
		СтруктураПоиска.Вставить("СтавкаНДС",			СтрокаТЧ.СтавкаНДС);
		
		РезультатПоиска = ФормаДокумента.Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураПоиска);
		
		Для каждого СтрокаРезультат Из РезультатПоиска Цикл
			
			Если ПересчитыватьЦеныСЗаказом ИЛИ 
				(НЕ ПересчитыватьЦеныСЗаказом И НЕ ЗначениеЗаполнено(СтрокаРезультат.Заказ)) Тогда
				
				//{[+](фрагмент добавлен), Lena@ICSOFT 18.12.2017 22:13:03
				СтрокаРезультат.ВидЦены = СтруктураДанных.ВидЦен;
				СтрокаРезультат.ЦенаПоТипу = СтрокаТЧ.Цена;
				Если Не ЗначениеЗаполнено(СтрокаРезультат.Коэффициент) Тогда
					СтрокаРезультат.Коэффициент = 1;
				КонецЕсли; 
				
				СтрокаРезультат.Цена = СтрокаРезультат.Коэффициент * СтрокаРезультат.ЦенаПоТипу;
				//}Lena@ICSOFT 18.12.2017 22:13:03
			КонецЕсли;
			РассчитатьСуммуСтрокиТабличнойЧасти(ФормаДокумента, СтрокаРезультат);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Если ПересчитатьСкидки Тогда
		Для каждого СтрокаТабличнойЧасти Из ФормаДокумента.Объект[ИмяТабличнойЧасти] Цикл
			СтрокаТабличнойЧасти.ПроцентСкидкиНаценки = СтруктураДанных.ПроцентСкидкиНаценки;
			РассчитатьСуммуСтрокиТабличнойЧасти(ФормаДокумента, СтрокаТабличнойЧасти);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ПерезаполнитьЦеныТабличнойЧастиПоВидуЦен()

Процедура ПерезаполнитьЦенуСтрокиТабличнойЧастиПоВидуЦен(ФормаДокумента, СтрокаТабличнойЧасти, ПересчитатьСкидки = Ложь, ПересчитыватьЦеныСЗаказом = Истина) Экспорт
	
	СтруктураДанных = Новый Структура;
	ТабличнаяЧастьДокумента = Новый Массив;

	СтруктураДанных.Вставить("Дата",				ФормаДокумента.Объект.Дата);
	СтруктураДанных.Вставить("ВалютаДокумента",		ФормаДокумента.Объект.ВалютаДокумента);
	СтруктураДанных.Вставить("СуммаВключаетНДС",	ФормаДокумента.Объект.СуммаВключаетНДС);
	
	
	Если ФормаДокумента.ИмяФормы = "Обработка.А_ПодборРеализация.Форма.КорзинаЦенаОстатокРезервХарактеристика" Тогда
		СтруктураДанных.Вставить("Организация",			ФормаДокумента.Объект.Организация);
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.А_ВидЦены) Тогда
			СтруктураДанных.Вставить("ВидЦен",				СтрокаТабличнойЧасти.А_ВидЦены);
		Иначе
			СтруктураДанных.Вставить("ВидЦен",				ФормаДокумента.Объект.ВидЦен);
		КонецЕсли; 
	Иначе
		СтруктураДанных.Вставить("Организация",			ФормаДокумента.Компания);
		СтруктураДанных.Вставить("ВидЦен",				СтрокаТабличнойЧасти.А_ВидЦены);
		Если ПересчитатьСкидки Тогда
			СтруктураДанных.Вставить("ВидСкидкиНаценки", ФормаДокумента.Объект.ВидСкидкиНаценки);
			СтруктураДанных.Вставить("ПроцентСкидкиНаценки", 0);
			Если УправлениеНебольшойФирмойСервер.ЕстьРеквизитДокументаПоСсылке("ПроцентСкидкиПоДисконтнойКарте", ФормаДокумента.Объект.Ссылка) Тогда
				СтруктураДанных.Вставить("ПроцентСкидкиПоДисконтнойКарте", ФормаДокумента.Объект.ПроцентСкидкиПоДисконтнойКарте);		
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли; 
	
	
		//СтрокаТЧ = СтрокаТабличнойЧасти;
		//СтрокаТЧ.Цена = 0;
		//{[+](фрагмент добавлен), Lena@ICSOFT 18.12.2017 22:04:44
		//СтрокаТЧ.ЦенаПоТипу = 0;
		//СтрокаТЧ.ВидЦены = СтруктураДанных.ВидЦен;
		//СтрокаТЧ.Коэффициент = 1;
		//}Lena@ICSOFT 18.12.2017 22:04:44		
		//Если Не ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
		//	Продолжить;	
		//КонецЕсли; 
		
		СтрокаТабЧасти = Новый Структура();
		СтрокаТабЧасти.Вставить("Номенклатура",		СтрокаТабличнойЧасти.Номенклатура);
		СтрокаТабЧасти.Вставить("Характеристика",		СтрокаТабличнойЧасти.Характеристика);
		СтрокаТабЧасти.Вставить("ЕдиницаИзмерения",	СтрокаТабличнойЧасти.ЕдиницаИзмерения);
		СтрокаТабЧасти.Вставить("СтавкаНДС",			СтрокаТабличнойЧасти.СтавкаНДС);
		СтрокаТабЧасти.Вставить("Цена",				0);
		//СтрокаТабЧасти.Вставить("ЦенаПоТипу",			0);
		СтрокаТабЧасти.Вставить("А_ВидЦены",			СтруктураДанных.ВидЦен);
		//СтрокаТабЧасти.Вставить("Коэффициент",				1);
		
		ТабличнаяЧастьДокумента.Добавить(СтрокаТабЧасти);
		
		
	УправлениеНебольшойФирмойСервер.ПолучитьЦеныТабличнойЧастиПоВидуЦен(СтруктураДанных, ТабличнаяЧастьДокумента);
		
	Для каждого СтрокаТЧ Из ТабличнаяЧастьДокумента Цикл

			
			Если ПересчитыватьЦеныСЗаказом ИЛИ 
				(НЕ ПересчитыватьЦеныСЗаказом И НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Заказ)) Тогда
				СтрокаТабличнойЧасти.А_ВидЦены = СтруктураДанных.ВидЦен;
				СтрокаТабличнойЧасти.А_ЦенаПоТипу = СтрокаТЧ.Цена;
				Если СтрокаТабличнойЧасти.А_Коэффициент = 0 Тогда
					СтрокаТабличнойЧасти.А_Коэффициент = 1;
				КонецЕсли; 
				СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.А_ЦенаПоТипу * СтрокаТабличнойЧасти.А_Коэффициент;

			КонецЕсли;
			РассчитатьСуммуСтрокиТабличнойЧасти(ФормаДокумента, СтрокаТабличнойЧасти);
			
	КонецЦикла;
	Если ФормаДокумента.ИмяФормы <> "Обработка.А_ПодборРеализация.Форма.КорзинаЦенаОстатокРезервХарактеристика" Тогда
		Если ПересчитатьСкидки Тогда
			СтрокаТабличнойЧасти.ПроцентСкидкиНаценки = СтруктураДанных.ПроцентСкидкиНаценки;
			РассчитатьСуммуСтрокиТабличнойЧасти(ФормаДокумента, СтрокаТабличнойЧасти);
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры // ПерезаполнитьЦеныТабличнойЧастиПоВидуЦен()

// Выполняем пересчет цены по валюте табличной части документа после изменений в форме 
// "Цены и валюта".
//
// Параметры:
//  ПредыдущаяВалюта - СправочникСсылка.Валюты, содержит ссылку на предыдущую
//                 валюту.
//
Процедура ПересчитатьЦеныТабличнойЧастиПоВалюте(ФормаДокумента, ПредыдущаяВалюта, ИмяТабличнойЧасти) Экспорт
	
	СтруктураКурсы = УправлениеНебольшойФирмойСервер.ПолучитьКурсыВалют(ПредыдущаяВалюта, ФормаДокумента.Объект.ВалютаДокумента, ФормаДокумента.Объект.Дата);
																   
	Для каждого СтрокаТабличнойЧасти Из ФормаДокумента.Объект[ИмяТабличнойЧасти] Цикл
		
		// ЦенаПоТипу.
		Если СтрокаТабличнойЧасти.Свойство("ЦенаПоТипу") Тогда
			
			СтрокаТабличнойЧасти.ЦенаПоТипу = УправлениеНебольшойФирмойКлиент.ПересчитатьИзВалютыВВалюту(СтрокаТабличнойЧасти.ЦенаПоТипу, 
																	СтруктураКурсы.КурсНач, 
																	СтруктураКурсы.Курс, 
																	СтруктураКурсы.КратностьНач, 
																	СтруктураКурсы.Кратность);
																	
			//РассчитатьСуммуСтрокиТабличнойЧасти(ФормаДокумента, СтрокаТабличнойЧасти);
		КонецЕсли;
		

		
		// Цена.
		Если СтрокаТабличнойЧасти.Свойство("Цена") Тогда
			
			СтрокаТабличнойЧасти.Цена = УправлениеНебольшойФирмойКлиент.ПересчитатьИзВалютыВВалюту(СтрокаТабличнойЧасти.Цена, 
																	СтруктураКурсы.КурсНач, 
																	СтруктураКурсы.Курс, 
																	СтруктураКурсы.КратностьНач, 
																	СтруктураКурсы.Кратность);
																	
			РассчитатьСуммуСтрокиТабличнойЧасти(ФормаДокумента, СтрокаТабличнойЧасти);
			
		// Сумма.	
		ИначеЕсли СтрокаТабличнойЧасти.Свойство("Сумма") Тогда
			
			СтрокаТабличнойЧасти.Сумма = УправлениеНебольшойФирмойКлиент.ПересчитатьИзВалютыВВалюту(СтрокаТабличнойЧасти.Сумма, 
																	СтруктураКурсы.КурсНач, 
																	СтруктураКурсы.Курс, 
																	СтруктураКурсы.КратностьНач, 
																	СтруктураКурсы.Кратность);														
					
			Если СтрокаТабличнойЧасти.Свойство("ПроцентСкидкиНаценки") Тогда
				
				// Скидки.
				Если СтрокаТабличнойЧасти.ПроцентСкидкиНаценки = 100 Тогда
					СтрокаТабличнойЧасти.Сумма = 0;
				ИначеЕсли СтрокаТабличнойЧасти.ПроцентСкидкиНаценки <> 0 И СтрокаТабличнойЧасти.Количество <> 0 Тогда
					СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Сумма * (1 - СтрокаТабличнойЧасти.ПроцентСкидкиНаценки / 100);
				КонецЕсли;
								
			КонецЕсли;														
			
			СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
			
	        СтрокаТабличнойЧасти.СуммаНДС = ?(ФормаДокумента.Объект.СуммаВключаетНДС, 
								  				СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
								  				СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
					        		
			СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(ФормаДокумента.Объект.СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);
			
		КонецЕсли;
        		        
	КонецЦикла; 

КонецПроцедуры // ПересчитатьЦеныТабличнойЧастиПоВалюте()


// Процедура рассчитывает сумму строки табличной части при заполнение по "Цены и валюта".
//
Процедура РассчитатьСуммуСтрокиТабличнойЧасти(ФормаДокумента, СтрокаТабЧасти, ОбнулятьАвтоСкидки = Истина)
	
	Если СтрокаТабЧасти.Свойство("Количество") И СтрокаТабЧасти.Свойство("Цена") Тогда
		СтрокаТабЧасти.Сумма = СтрокаТабЧасти.Количество * СтрокаТабЧасти.Цена;
	КонецЕсли;
	
	Если СтрокаТабЧасти.Свойство("ПроцентСкидкиНаценки") Тогда
		Если СтрокаТабЧасти.ПроцентСкидкиНаценки = 100 Тогда
			СтрокаТабЧасти.Сумма = 0;
		ИначеЕсли СтрокаТабЧасти.ПроцентСкидкиНаценки <> 0 И СтрокаТабЧасти.Количество <> 0 Тогда
			СтрокаТабЧасти.Сумма = СтрокаТабЧасти.Сумма * (1 - СтрокаТабЧасти.ПроцентСкидкиНаценки / 100);
		КонецЕсли;
	КонецЕсли;	

	СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабЧасти.СтавкаНДС);
			
	Если ФормаДокумента.Объект.Свойство("СуммаВключаетНДС") Тогда
		
		Если СтрокаТабЧасти.Свойство("Сумма") Тогда
			
			СтрокаТабЧасти.СуммаНДС = ?(
				ФормаДокумента.Объект.СуммаВключаетНДС, 
				СтрокаТабЧасти.Сумма - (СтрокаТабЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
				СтрокаТабЧасти.Сумма * СтавкаНДС / 100
			);
			СтрокаТабЧасти.Всего = СтрокаТабЧасти.Сумма + ?(ФормаДокумента.Объект.СуммаВключаетНДС, 0, СтрокаТабЧасти.СуммаНДС);
			
		Иначе
			
			БазаРасчетаНДС = СтрокаТабЧасти.ТаможеннаяСтоимость + СтрокаТабЧасти.СуммаПошлины;
			
			СтрокаТабЧасти.СуммаНДС = ?(
				ФормаДокумента.Объект.СуммаВключаетНДС, 
				БазаРасчетаНДС - (БазаРасчетаНДС) / ((СтавкаНДС + 100) / 100),
				БазаРасчетаНДС * СтавкаНДС / 100
			);
			
		КонецЕсли;
		
	Иначе
		
		СтрокаТабЧасти.СуммаНДС = СтрокаТабЧасти.Сумма * СтавкаНДС / 100;
		СтрокаТабЧасти.Всего = СтрокаТабЧасти.Сумма + СтрокаТабЧасти.СуммаНДС;
		
	КонецЕсли;
	
	// АвтоматическиеСкидки
	Если ОбнулятьАвтоСкидки Тогда
		Если СтрокаТабЧасти.Свойство("ПроцентАвтоматическойСкидки") Тогда
			СтрокаТабЧасти.ПроцентАвтоматическойСкидки = 0;
			СтрокаТабЧасти.СуммаАвтоматическойСкидки = 0;
		КонецЕсли;
		Если СтрокаТабЧасти.Свойство("ОбщаяСуммаСкидкиБольшеСуммы") Тогда
			СтрокаТабЧасти.ОбщаяСуммаСкидкиБольшеСуммы = Ложь;
		КонецЕсли;
	Иначе
		Если СтрокаТабЧасти.Свойство("ОбщаяСуммаСкидкиБольшеСуммы") Тогда
			ТекСуммаРучнойСкидки = ?(СтрокаТабЧасти.ПроцентСкидкиНаценки = 0, СтрокаТабЧасти.Цена * СтрокаТабЧасти.Количество * СтрокаТабЧасти.ПроцентСкидкиНаценки / 100, 0);
			ТекСуммаСкидки = ТекСуммаРучнойСкидки + СтрокаТабЧасти.СуммаАвтоматическойСкидки;
			Если ТекСуммаСкидки >= СтрокаТабЧасти.Сумма И СтрокаТабЧасти.Цена > 0 Тогда
				СтрокаТабЧасти.ОбщаяСуммаСкидкиБольшеСуммы = Истина;
			Иначе
				СтрокаТабЧасти.ОбщаяСуммаСкидкиБольшеСуммы = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// Конец АвтоматическиеСкидки
	
КонецПроцедуры // РассчитатьСуммуСтрокиТабличнойЧасти()	

//}Lena@ICSOFT 18.12.2017 22:24:30
